		
		 Algorithm for the game.
		 0. accept number of overs
		 1. Accept the player type.
		 a. Amateur
		 b. Intermediate
		 c. Pro
		 2. Choose toss
		 1. head 
		 2. tails
		 on getting the correct toss choose batting or bowling
		 if toss is lost CPU takes the call
		 
		 Game logic:
		 Valid inputs
		 [0, 1, 2, 3, 4, 5, 6]
		 
		 a. Amateur
		 Batting.
		 only if user input matches the exact number predicted by CPU
		 user gets out.
		 Bowling
		 if user input matches any of the 4 random number generated by the 
		 CPU from the list, then the CPU gets out
		 
		 b. Intermediate
		 Batting
		 if user input matches any of the 2 random numbers generated by the CPU,
		 user gets out
		 Bowling
		 if user input matches any of the 2 random numbers generated by the CPU,
		 CPU gets out.
		 CPU takes highest of the random value it generated as the score.
		 
		 c. pro
		 Batting
		 if user input matches any of the 4 random numbers generated by the CPU,
		 user gets out. 
		 Bowling 
		 if user input matches exactly the random number generated by the CPU,
		 CPU gets out.
		 CPU takes highest of the random value as the score.
		 
		 Enter the player name:
		 
		 Accept number of overs:
		 1. unlimited
		 2. Enter no of overs:
		 balls = overs * 6
		 
		 Player type:
		 1. Amateur
		 2. Intermediate
		 3. Pro
		 
		 Toss:
		 Random function: head or tail
		 1. get input from user
		 2. generate the head or tail
		 3. compare with the user 
		 4. if matches ask user to choose batting on bowling
		 
		 if current round === batting, add user score until user gets out
		 
		 1.user input not matching CPU output
		 	user.score = user.score + userInput
		 	[Store all the user input to show highlights].
		 	
		 2. if user input matches the CPU output
		 display OUT!!!!
		 
		 count the number of overs as well...
		 
		 [optional, commentary class which displays the commentary]
		 
		 game should end either if the overs are finished or the 2nd innings
		 score becomes > the first innings score.
		 

Classes:

Main - where the game logic executes
Player - 
playerName
playerScore
playerScoreHighLight - 2 dimensional array [overs][6]
playerType - [CPU, Amateur, intermediate, pro]




		 
		 
		 